// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

/* ============== KATALOG ============== */
model Category {
  id         String      @id @default(cuid())
  name       String      @unique
  variants   Variant[]
  orderItems OrderItem[]
}

model Variant {
  id         String      @id @default(cuid())
  name       String
  unitPrice  Decimal     @default(0) @db.Decimal(12,2)
  categoryId String
  category   Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@index([categoryId])
}

/* ============== SİPARİŞ ============== */
model Order {
  id             String      @id @default(cuid())
  createdAt      DateTime    @default(now())
  note           String?
  total          Decimal     @default(0) @db.Decimal(12,2)
  customerName   String      @default("")
  customerPhone  String      @default("")
  status         OrderStatus @default(pending)

  items          OrderItem[]
  extras         OrderExtra[]      // ücretli STOR/AKSESUAR kalemleri

  // Eski serbest metin alanları (opsiyonel, toplam hesabına katılmaz)
  storLines       Json?
  accessoryLines  Json?

  // Rapor & aramalar için indexler
  @@index([createdAt])
  @@index([status, createdAt])
}

enum OrderStatus {
  pending
  processing
  completed
  cancelled
}

/* m² * fileDensity * unitPrice */
model OrderItem {
  id          String   @id @default(cuid())
  orderId     String
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])

  variantId   String
  variant     Variant  @relation(fields: [variantId], references: [id])

  qty         Int
  width       Int       // cm
  height      Int       // cm
  unitPrice   Decimal   @default(0) @db.Decimal(12,2)
  fileDensity Decimal   @default(1) @db.Decimal(3,1)   // 1.0, 1.5, 2.0, ...

  subtotal    Decimal   @default(0) @db.Decimal(12,2)
  note        String?

  @@index([orderId])
  @@index([categoryId])
  @@index([variantId])
}

/* Adet * Birim Fiyat */
model OrderExtra {
  id         String    @id @default(cuid())
  orderId    String
  order      Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)

  type       ExtraType // STOR | ACCESSORY
  text       String
  qty        Int       @default(1)
  unitPrice  Decimal   @default(0) @db.Decimal(12,2)
  subtotal   Decimal   @default(0) @db.Decimal(12,2) // qty * unitPrice
  note       String?

  createdAt  DateTime  @default(now())

  @@index([orderId, type])
}

enum ExtraType {
  STOR
  ACCESSORY
}
